{
	"name": "dataflow_actor",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "RawDataCSV",
						"type": "DatasetReference"
					},
					"name": "SourceActor"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Parquet1",
						"type": "DatasetReference"
					},
					"name": "OutputActor"
				}
			],
			"transformations": [
				{
					"name": "select1"
				},
				{
					"name": "derivedColumn"
				},
				{
					"name": "select2"
				}
			],
			"scriptLines": [
				"source(output(",
				"          actor_id as short,",
				"          first_name as string,",
				"          last_name as string,",
				"          last_update as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> SourceActor",
				"SourceActor select(mapColumn(",
				"          actor_id,",
				"          first_name,",
				"          last_name",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 derive(name = first_name + \" \" + last_name) ~> derivedColumn",
				"derivedColumn select(mapColumn(",
				"          actor_id,",
				"          name",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"select2 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     partitionFileNames:['actor'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> OutputActor"
			]
		}
	}
}